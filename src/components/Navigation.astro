---
import "../../public/styles/style.css"
---
<nav class="full-bleed">
    <a href="#" aria-label="home">
        <img class="logo" src="/icons/logo.svg" alt="Logo">
    </a>
        <ul>
            <li><a href="#about">About</a></li>
            <li><a href="#work">Work</a></li>
            <li class="contact"><a href="#contact">Contact</a></li>
            <li>
              <a class="linkedin" target="_blank" href="" aria-label="linkedin link">
                <img class="svg" src="/icons/linkedin.svg">
              </a>
            </li>
            <li>
              <a class="github" target="_blank" href="" aria-label="github link">
                <img class="svg" src="/icons/github.svg"></>
              </a>
            </li>
        </ul>
</nav>

<script>
export async function navigationData() {
  const options = {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: "08ea7024221413272431b8c2343512",
    },
    body: JSON.stringify({
      query: `query MyQuery {
  navigation {
    logo {
      url
      alt
    }
    linkedinLogo {
      url
    }
    linkedinLink
    githubLogo {
      url
    }
    githubLink
  }
}
`,
    }),
  };

 try {
    const res = await fetch("https://graphql.datocms.com/", options);
    const data = await res.json();
    return data; // Return the data
  } catch (error) {
    console.error("Error fetching data:", error);
    throw error;
  }
}

// Call getHeroData and then showData when the data is available
navigationData()
  .then((data) => {
    showNavigationData(data);
  })
  .catch((error) => {
    // Handle errors here
  });

function showNavigationData(data) {
const linkedInLink = document.querySelector(".linkedin")
const gitHubLink = document.querySelector(".github");

linkedInLink.href = data.data.navigation.linkedinLink;
gitHubLink.href = data.data.navigation.githubLink;
}


import { gsap } from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";
gsap.registerPlugin(ScrollTrigger);

gsap.to(".logo", {
  rotation: 360, // Rotate 360 degrees (or any large value)
  scrollTrigger: {
    trigger: ".logo",
    start: "top -100%", // Trigger when the top of the .logo element reaches the center of the viewport
    end: "top 100%", // Trigger when the bottom of the viewport reaches the center of the .logo element
    scrub: true,

  },
});


</script>

<style>
    .logo {
        width: var(--logo-size);
    }

   nav {
        display: flex;
        place-items: center;
        justify-content: space-between;
        color: var(--light-900);
        background-color: rgba(0, 0, 0, .2);
        padding: var(--nav-padding-block);
        position: fixed;
        width: -webkit-fill-available;
        z-index: 999;
        backdrop-filter: blur(10px);
    }

    nav ul {
        display: flex;
        gap: var(--space-m);
        place-items: center;
    }

    .svg {
      height: 30px;
    }

    nav a {
      font-size: var(--fs-small);
    }

    .contact {
      border: 1px solid var(--light-900);
      padding: var(--button-padding);
      border-radius: var(--round-border-radius);
      cursor: pointer;
      transition: var(--transition);
    }

    .contact:hover {
      background-color: var(--accent);
      transition: var(--transition);
    }
</style>